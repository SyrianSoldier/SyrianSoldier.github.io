const e=JSON.parse(`{"key":"v-3c09f7a6","path":"/ComputerScience/algorithm/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98.html","title":"算法刷题","lang":"zh-CN","frontmatter":{"description":"两数之和 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 *target 的那 *两个** 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。 你可以按任意顺序返回答案。 示例 1： 有效的括号 给定一个只包括 '('，\`')'，'{'，'}'，'[...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/ComputerScience/algorithm/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"返回首页"}],["meta",{"property":"og:title","content":"算法刷题"}],["meta",{"property":"og:description","content":"两数之和 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 *target 的那 *两个** 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。 你可以按任意顺序返回答案。 示例 1： 有效的括号 给定一个只包括 '('，\`')'，'{'，'}'，'[..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-09T03:03:19.000Z"}],["meta",{"property":"article:author","content":"苏察哈尔灿hh"}],["meta",{"property":"article:modified_time","content":"2023-10-09T03:03:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法刷题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-09T03:03:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"苏察哈尔灿hh\\",\\"url\\":\\"https://syriansoldier.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"两数之和","slug":"两数之和","link":"#两数之和","children":[]},{"level":2,"title":"有效的括号","slug":"有效的括号","link":"#有效的括号","children":[]},{"level":2,"title":"合并两个有序链表","slug":"合并两个有序链表","link":"#合并两个有序链表","children":[]},{"level":2,"title":"爬楼梯","slug":"爬楼梯","link":"#爬楼梯","children":[]},{"level":2,"title":"二叉树的中序遍历","slug":"二叉树的中序遍历","link":"#二叉树的中序遍历","children":[]},{"level":2,"title":"对称二叉树","slug":"对称二叉树","link":"#对称二叉树","children":[]},{"level":2,"title":"二叉树的最大深度","slug":"二叉树的最大深度","link":"#二叉树的最大深度","children":[]},{"level":2,"title":"买卖股票的最佳时机","slug":"买卖股票的最佳时机","link":"#买卖股票的最佳时机","children":[]},{"level":2,"title":"只出现一次的数字","slug":"只出现一次的数字","link":"#只出现一次的数字","children":[]},{"level":2,"title":"环形链表","slug":"环形链表","link":"#环形链表","children":[]},{"level":2,"title":"相交链表","slug":"相交链表","link":"#相交链表","children":[]},{"level":2,"title":"反转链表","slug":"反转链表","link":"#反转链表","children":[]},{"level":2,"title":"回文链表","slug":"回文链表","link":"#回文链表","children":[]},{"level":2,"title":"移动零","slug":"移动零","link":"#移动零","children":[]},{"level":2,"title":"比特位计数","slug":"比特位计数","link":"#比特位计数","children":[]},{"level":2,"title":"找到所有数组中消失的数字","slug":"找到所有数组中消失的数字","link":"#找到所有数组中消失的数字","children":[]},{"level":2,"title":"二叉树的直径","slug":"二叉树的直径","link":"#二叉树的直径","children":[]},{"level":2,"title":"合并二叉树","slug":"合并二叉树","link":"#合并二叉树","children":[]},{"level":2,"title":"回溯 -- 子集","slug":"回溯-子集","link":"#回溯-子集","children":[]},{"level":2,"title":"回溯 -- 全排列","slug":"回溯-全排列","link":"#回溯-全排列","children":[]},{"level":2,"title":"回溯 -- 括号生成","slug":"回溯-括号生成","link":"#回溯-括号生成","children":[]},{"level":2,"title":"分治 -- 从前序与中序遍历序列构造二叉树","slug":"分治-从前序与中序遍历序列构造二叉树","link":"#分治-从前序与中序遍历序列构造二叉树","children":[]},{"level":2,"title":"分治 -- 从后序与中序遍历序列构造二叉树","slug":"分治-从后序与中序遍历序列构造二叉树","link":"#分治-从后序与中序遍历序列构造二叉树","children":[]},{"level":2,"title":"分治 -- 数组中的第K个最大元素","slug":"分治-数组中的第k个最大元素","link":"#分治-数组中的第k个最大元素","children":[]},{"level":2,"title":"贪心 -- 盛最多水的容器","slug":"贪心-盛最多水的容器","link":"#贪心-盛最多水的容器","children":[]},{"level":2,"title":"贪心 -- 跳跃游戏","slug":"贪心-跳跃游戏","link":"#贪心-跳跃游戏","children":[]}],"git":{"createdTime":1696820599000,"updatedTime":1696820599000,"contributors":[{"name":"Summer","email":"summer@tradev-group.com","commits":1}]},"readingTime":{"minutes":30.37,"words":9112},"filePathRelative":"ComputerScience/algorithm/算法刷题.md","localizedDate":"2023年10月9日","autoDesc":true}`);export{e as data};
